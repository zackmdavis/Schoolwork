#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Assignment #9
\end_layout

\begin_layout Author
Zack M.
 Davis
\end_layout

\begin_layout Date
11 November 2024
\end_layout

\begin_layout Abstract
Homework submission for Prof.
 Mujamdar's 
\begin_inset Quotes eld
\end_inset

Probability Models
\begin_inset Quotes erd
\end_inset

 class.
\end_layout

\begin_layout Subsection*
Ch.
 4
\end_layout

\begin_layout Standard

\series bold
66
\series default
.
 
\series bold
a
\series default
.
 
\begin_inset Formula $\mu=\frac{1}{4}(0)+\frac{3}{4}(2)=\frac{6}{4}=\frac{3}{2}>1$
\end_inset

, so according to Ross ยง4.7 (p.
 250), we look for the smallest positive solution of 
\begin_inset Formula $\pi_{0}=\frac{1}{4}+\frac{3}{4}\pi^{2}\Rightarrow\frac{1}{4}-\pi_{0}+\frac{3}{4}\pi^{2}=0\Rightarrow\pi_{0}=\frac{1\pm\sqrt{1-4\left(\frac{1}{4}\right)\left(\frac{3}{4}\right)}}{2\frac{3}{4}}=\frac{1\pm\sqrt{\frac{1}{4}}}{\frac{3}{2}}=\frac{2}{3}(1\pm\frac{1}{2})=\frac{2}{3}\pm\frac{1}{3}$
\end_inset

, which is 
\color teal

\begin_inset Formula $\pi_{0}=\frac{1}{3}$
\end_inset


\color inherit
.
\end_layout

\begin_layout Standard

\series bold
b
\series default
.
 
\begin_inset Formula $\mu=\frac{1}{4}(0)+\frac{1}{2}(1)+\frac{1}{4}(2)=1$
\end_inset

.
 But Ross p.
 249 tells us that 
\begin_inset Formula $\mu$
\end_inset

 would need to be 
\emph on
strictly
\emph default
 greater than 1 in order to escape the fate of 
\color teal

\begin_inset Formula $\pi_{0}=1$
\end_inset


\color inherit
.
 
\end_layout

\begin_layout Standard

\series bold
c
\series default
.
 
\begin_inset Formula $\mu=\frac{1}{6}(0)+\frac{1}{2}(1)+\frac{1}{3}(3)=\frac{3}{2}>1$
\end_inset

.
 So we need to solve 
\begin_inset Formula $\pi_{0}=\frac{1}{6}+\frac{1}{2}\pi_{0}+\frac{1}{3}\pi_{0}^{3}\Rightarrow\frac{1}{3}\pi_{0}^{3}-\frac{1}{2}\pi_{0}+\frac{1}{6}=0$
\end_inset

.
 I couldn't immediately see how to solve this by hand, so I turned to NumPy:
\end_layout

\begin_layout LyX-Code
In [1]: import numpy as np
\end_layout

\begin_layout LyX-Code
   ...: np.polynomial.Polynomial([1/6, -1/2, 0, 1/3]).roots()
\end_layout

\begin_layout LyX-Code
Out[1]: array([-1.3660254,  0.3660254,  1.
       ]) 
\end_layout

\begin_layout Standard
So the computer is telling us that 
\color teal

\begin_inset Formula $\pi_{0}\approx0.366$
\end_inset


\color inherit
.
\end_layout

\begin_layout Standard

\series bold
70
\series default
.
 
\series bold
a
\series default
.
 Suppose there are 
\begin_inset Formula $k$
\end_inset

 black balls in urn #1.
 Then there are 
\begin_inset Formula $m-k$
\end_inset

 black balls in urn #2, and also 
\begin_inset Formula $m-k$
\end_inset

 white balls in urn #1, and 
\begin_inset Formula $k$
\end_inset

 white balls in urn #2.
\end_layout

\begin_layout Standard
The number of black balls in urn #1 stays the same when we swap a white
 (respectively black) ball in urn #1 for a white (respectively black) ball
 in urn #2, each of which happens with probability 
\begin_inset Formula $\frac{k}{m}\cdot\frac{m-k}{m}$
\end_inset

, such that 
\begin_inset Formula $P(X_{n}=X_{n+1})=2\frac{k(m-k)}{m^{2}}$
\end_inset

.
 By similar reasoning, 
\begin_inset Formula $P(X_{n+1}=X_{n}+1)=\frac{(m-k)^{2}}{m^{2}}$
\end_inset

 and 
\begin_inset Formula $P(X_{n+1}=X_{n}-1)=\frac{k^{2}}{m^{2}}$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
b
\series default
.
 In the limit, I expect the modal value of 
\begin_inset Formula $X_{n}$
\end_inset

 to be 
\begin_inset Formula $\frac{m}{2}$
\end_inset

.
 The problem has a 
\begin_inset Quotes eld
\end_inset

thermodynamic
\begin_inset Quotes erd
\end_inset

 flavor: there are more ways for the black balls to be evenly mixed than
 concentrated in one urn, so the system should overwhelmingly spend its
 time in evenly-mixed states.
\end_layout

\begin_layout Standard
Is ...
 is that a good enough answer? Consulting the solutions manual, it appears
 not, and that Ross had something more specific in mind.
 (I suppose I took 
\begin_inset Quotes eld
\end_inset

without any computations
\begin_inset Quotes erd
\end_inset

 as an invitation to be vague.) In the well-mixed limit, the probability
 of having 
\begin_inset Formula $k$
\end_inset

 black balls in urn #1 is the number of ways to choose 
\begin_inset Formula $k$
\end_inset

 black balls, times the number of ways to choose 
\begin_inset Formula $m-k$
\end_inset

 white balls, divided by the number of ways to choose 
\begin_inset Formula $m$
\end_inset

 balls from 
\begin_inset Formula $2m$
\end_inset

: that's 
\begin_inset Formula $\frac{\binom{m}{k}\binom{m}{m-k}}{\binom{2m}{m}}$
\end_inset

, which becomes 
\begin_inset Formula $\frac{\binom{m}{k}^{2}}{\binom{2m}{m}}$
\end_inset

 considering symmetry.
 (The 
\begin_inset Formula $k$
\end_inset

th entry of the 
\begin_inset Formula $n$
\end_inset

th row of Pascal's triangle is the same as the 
\begin_inset Formula $n-k$
\end_inset

th entry.) 
\end_layout

\begin_layout Standard

\series bold
c
\series default
.
 It wasn't clear to me how to find the limiting probabilities analytically
 for arbitrary 
\begin_inset Formula $m$
\end_inset

.
 It is straightforward to programmatically construct the transition matrix
 for given 
\begin_inset Formula $m$
\end_inset

:
\end_layout

\begin_layout LyX-Code
def thermoballs(n):
\end_layout

\begin_layout LyX-Code
    transitions = [[0 for _ in range(n+1)] for _ in range(n+1)]
\end_layout

\begin_layout LyX-Code
    transitions[0][1] = 1
\end_layout

\begin_layout LyX-Code
    for i in range(1, n):
\end_layout

\begin_layout LyX-Code
        transitions[i][i-1] = i**2 / n**2
\end_layout

\begin_layout LyX-Code
        transitions[i][i] = 2 * i * (n - i) / n**2
\end_layout

\begin_layout LyX-Code
        transitions[i][i+1] = (n - i)**2 / n**2
\end_layout

\begin_layout LyX-Code
    transitions[n][n-1] = 1
\end_layout

\begin_layout LyX-Code
    return transitions 
\end_layout

\begin_layout Standard
Then when we use our usual stationary-distribution-calculation function,
 we get something symmetric whose modal value is in the middle, as I expected;
 for example, when 
\begin_inset Formula $m:=8$
\end_inset

, the stationary distribution is 
\begin_inset Formula $\vec{\pi}=\left[\begin{array}{c}
7.77\cdot10^{-5}\\
0.00497\\
0.06092\\
0.243667\\
0.38073\\
0.243667\\
0.060917\\
0.004973\\
7.77\cdot10^{-5}
\end{array}\right]$
\end_inset

.
\end_layout

\begin_layout Standard
After glancing at the solutions manual while checking the intended answer
 for part (b), I see the shape of the argument for time-reversibility.
 For time-reversibility, we need 
\begin_inset Formula $\pi_{i}P_{ij}=\pi_{j}P_{ji}$
\end_inset

.
 When 
\begin_inset Formula $i-j>1$
\end_inset

, the transition probability is zero, so we only need to check 
\begin_inset Formula $\pi_{k}P_{k,k+1}=\pi_{k+1}P_{k+1,k}$
\end_inset

.
 
\begin_inset Formula 
\[
\frac{\binom{m}{k}^{2}}{\binom{2m}{m}}\frac{(m-k)^{2}}{m^{2}}=\frac{\binom{m}{k+1}^{2}}{\binom{2m}{m}}\frac{(k+1)^{2}}{m^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
(The probability of going from 
\begin_inset Formula $k$
\end_inset

 to 
\begin_inset Formula $k-1$
\end_inset

 is 
\begin_inset Formula $\frac{k^{2}}{m^{2}}$
\end_inset

, so the probability of going from 
\begin_inset Formula $k+1$
\end_inset

 to 
\begin_inset Formula $k$
\end_inset

 is 
\begin_inset Formula $\frac{(k+1)^{2}}{m^{2}}$
\end_inset

; you can't just blindly substitute 
\begin_inset Formula $\frac{k^{2}}{m^{2}}$
\end_inset

 as the probability of 
\begin_inset Quotes eld
\end_inset

going down.
\begin_inset Quotes erd
\end_inset

 I got this wrong on my first attempt at this calculation.)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\binom{m}{k}^{2}(m-k)^{2}=\binom{m}{k+1}^{2}(k+1)^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\frac{m!}{k!(m-k)!}\right)^{2}(m-k)^{2}=\left(\frac{m!}{(k+1)!(m-k-1)!}\right)^{2}(k+1)^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{(m-k)^{2}}{k!^{2}(m-k)!^{2}}=\frac{(k+1)^{2}}{(k+1)!^{2}(m-k-1)!^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{k!^{2}(m-k-1)!^{2}}=\frac{1}{k!^{2}(m-k-1)!^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
So it checks out! 
\end_layout

\begin_layout Standard

\series bold
72
\series default
.
 In equilibrium, the rate of iโjโk transitions is 
\begin_inset Formula $\pi_{i}P_{ij}P_{jk}$
\end_inset

, and the rate of k-j-i transitions is 
\begin_inset Formula $\pi_{k}P_{kj}P_{ji}.$
\end_inset

 But applying the time reversibility condition to each, we see that the
 former is also 
\begin_inset Formula $\pi_{j}P_{ji}P_{jk}$
\end_inset

 and the latter is 
\begin_inset Formula $\pi_{j}P_{jk}P_{ji}$
\end_inset

, which is the same thing with the transition factors written in the other
 order.
 But multiplication is commutative.
\end_layout

\begin_layout Standard

\series bold
73
\series default
.
 
\series bold
a
\series default
.
 We're in state 
\begin_inset Formula $i$
\end_inset

 if player 
\begin_inset Formula $i$
\end_inset

 just won.
 Each possible challenger has a probability of 
\begin_inset Formula $\frac{1}{k-1}$
\end_inset

 of being selected.
 If the uniformly randomly chosen challenger 
\begin_inset Formula $j$
\end_inset

 loses, we transition to that state, but if they lose, we stay in state
 
\begin_inset Formula $i$
\end_inset

.
 So for 
\begin_inset Formula $j\neq i$
\end_inset

, 
\begin_inset Formula $P_{i,j}=\frac{v_{j}}{(k-1)(v_{i}+v_{j})}$
\end_inset

 but 
\begin_inset Formula $P_{i,i}=\frac{1}{k-1}\sum_{j\neq i}\frac{v_{i}}{v_{i}+v_{j}}$
\end_inset

.
 
\end_layout

\begin_layout Standard

\series bold
b
\series default
.
 Our usual famous formula 
\begin_inset Formula $\vec{\pi}=(P^{\intercal}-I)\vec{\pi}$
\end_inset

 in this case amounts to: 
\begin_inset Formula 
\[
\begin{cases}
\left(P_{i,i}-1\right)\pi_{i}+\sum_{j=1}^{k}P_{j,i}\pi_{j}=0 & i\in\{1,...,k\}\\
\sum_{j}\pi_{j}=1
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $P_{i,j}$
\end_inset

 and 
\begin_inset Formula $P_{i,i}$
\end_inset

 are defined as in (a) above.
\end_layout

\begin_layout Standard

\series bold
c
\series default
.
 Time-reversibility canoncially means that 
\begin_inset Formula $\pi_{i}P_{i,j}=\pi_{j}P_{j,i}$
\end_inset

.
 Here, that would expand to 
\begin_inset Formula $\pi_{i}\frac{v_{j}}{(k-1)(v_{i}+v_{j})}=\pi_{j}\frac{v_{i}}{(k-1)(v_{i}+v_{j})}$
\end_inset

, which simplifies to 
\begin_inset Formula $\pi_{i}v_{j}=\pi_{j}v_{i}$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
d
\series default
.
 The proportion of games won by player 
\begin_inset Formula $j$
\end_inset

 is 
\begin_inset Formula $\pi_{j}$
\end_inset

, so it would seem that we need to solve for our stationary distributionโgeneric
ally in terms of 
\begin_inset Formula $v_{i}$
\end_inset

, rather than just having the computer crunch 
\begin_inset Formula $\vec{\pi}=(P^{\intercal}-I)\vec{\pi}$
\end_inset

 with specific numbers.
 Let's try ...
 considering the 
\begin_inset Formula $k:=3$
\end_inset

 case and hope it becomes clear how to generalize? We have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P^{\intercal}-I=\left[\begin{array}{ccc}
\frac{1}{2}\left(\frac{v_{1}}{v_{1}+v_{2}}+\frac{v_{1}}{v_{1}+v_{3}}\right)-1 & \frac{v_{1}}{2(v_{1}+v_{2})} & \frac{v_{1}}{2(v_{1}+v_{3})}\\
\frac{v_{2}}{2(v_{1}+v_{2})} & \frac{1}{2}\left(\frac{v_{2}}{v_{1}+v_{2}}+\frac{v_{2}}{v_{2}+v_{3}}\right)-1 & \frac{v_{2}}{2(v_{2}+v_{3})}\\
\frac{v_{3}}{2(v_{1}+v_{3})} & \frac{v_{3}}{2(v_{2}+v_{3})} & \frac{1}{2}\left(\frac{v_{3}}{v_{1}+v_{3}}+\frac{v_{3}}{v_{2}+v_{3}}\right)-1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
Solving this by hand would be annoying, so I'm going to turn to SymPy, which
 can do the algebra on
\end_layout

\begin_layout LyX-Code
PT_minus_I = Matrix([
\end_layout

\begin_layout LyX-Code
    [
\end_layout

\begin_layout LyX-Code
        (v1/(v1+v2) + v1/(v1+v3))/2 - 1,
\end_layout

\begin_layout LyX-Code
        v1/(2*(v1+v2)),
\end_layout

\begin_layout LyX-Code
        v1/(2*(v1+v3))
\end_layout

\begin_layout LyX-Code
    ],
\end_layout

\begin_layout LyX-Code
    [
\end_layout

\begin_layout LyX-Code
        v2/(2*(v1+v2)),
\end_layout

\begin_layout LyX-Code
        (v2/(v1+v2) + v2/(v2+v3))/2 - 1,
\end_layout

\begin_layout LyX-Code
        v2/(2*(v2+v3))
\end_layout

\begin_layout LyX-Code
    ],
\end_layout

\begin_layout LyX-Code
    [
\end_layout

\begin_layout LyX-Code
        v3/(2*(v1+v3)),
\end_layout

\begin_layout LyX-Code
        v3/(2*(v2+v3)),
\end_layout

\begin_layout LyX-Code
        (v3/(v1+v3) + v3/(v2+v3))/2 - 1
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
]) 
\end_layout

\begin_layout Standard
Running our usual stationary-distribution-finding function, SymPy says it's
 
\end_layout

\begin_layout LyX-Code
v1/(v1 + v2 + v3), v2/(v1 + v2 + v3), v3/(v1 + v2 + v3)
\end_layout

\begin_layout Standard
which is clearly suggestive of the true, general answer being 
\color teal

\begin_inset Formula 
\[
\pi_{i}=\frac{v_{i}}{\sum_{j}v_{j}}
\]

\end_inset


\end_layout

\begin_layout Standard

\series bold
e
\series default
.
 The proportion of games that involve player 
\begin_inset Formula $j$
\end_inset

 has to be greater than the proportion of games won by 
\begin_inset Formula $j$
\end_inset

: intuitively, I would expect this to be 
\begin_inset Formula $\pi_{j}+\frac{1}{k-1}(1-\pi_{j})$
\end_inset

.
 The idea being, if you're in a game, it's either because you won the last
 game, or you were randomly selected as the next contestant after one of
 the games that you didn't win.
 (I had initially written 
\begin_inset Formula $\frac{1}{k}$
\end_inset

, but OpenAI o1-preview pointed out it's 
\begin_inset Formula $\frac{1}{k-1}$
\end_inset

.)
\end_layout

\end_body
\end_document
